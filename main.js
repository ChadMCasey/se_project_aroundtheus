!function(){"use strict";class e{constructor(e,t,r,s,i){this._name=e.name,this._link=e.link,this._id=e.id,this._isLiked=e.isLiked,this._cardSelector=t,this._handleImageClick=r,this._handleCardLike=i,this._openDeleteModal=s,this._cardElement=null,this._cardImageElement=null,this._cardHeartElement=null,this._cardTrashElement=null,this._cardTextElement=null}generateCard(){return this._cardElement=this._generateCardTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__img"),this._cardHeartElement=this._cardElement.querySelector(".card__heart"),this._cardTrashElement=this._cardElement.querySelector(".card__trash"),this._cardTextElement=this._cardElement.querySelector(".card__title"),this._cardTextElement.textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this.setIsLiked(this._isLiked),this._cardElement}_generateCardTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardImageElement.addEventListener("click",(e=>{this._handleImageClick(this)})),this._cardTrashElement.addEventListener("click",(e=>{this._handleDelete(e)})),this._cardHeartElement.addEventListener("click",(e=>{this._handleLike(e)}))}_handleDelete(e){this._openDeleteModal(this)}_handleLike(e){this._handleCardLike(this)}getCardImageElement(){return this._cardImageElement}getCardText(){return this._cardTextElement}getID(){return this._id}getCardElement(){return this._cardElement}getIsLiked(){return this._isLiked}setIsLiked(e){this._isLiked=e,e?this._cardHeartElement.classList.add("card__heart_dark"):this._cardHeartElement.classList.remove("card__heart_dark")}}class t{constructor(e,t){this._config=e,this._form=t,this._formInputs=null,this._formButton=null}enableValidation(){this._formInputs=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._formButton=this._form.querySelector(this._config.submitButtonSelector),this._setEventListener()}_setEventListener(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.resetValidation()})),this._formInputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this.resetValidation()}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorTextClass),t.textContent=e.validationMessage}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorTextClass),t.textContent=""}_hasValidInput(){return this._formInputs.every((e=>e.validity.valid))}_toggleButtonState(){this._hasValidInput()?this._formButton.disabled=!1:this._formButton.disabled=!0}resetValidation(){this._formInputs.forEach((e=>{this._hideInputError(e)})),this._formButton.disabled=!0}}class r{constructor(e){this._popupSelector=e,this._popupSelectorNoPeriod=e.replace(".",""),this._popup=document.querySelector(e),this._popupClose=this._popup.querySelector(".modal__close")}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupClose.addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target.classList.contains(this._popupSelectorNoPeriod)&&this.close()}))}}class s extends r{constructor(e){let{popupSelector:t,handleSubmitFunc:r}=e;super(t),this._handleSubmit=r,this._popUpForm=this._popup.querySelector(".form"),this._inputList=this._popup.querySelectorAll(".form__input"),this._popupSubmit=this._popup.querySelector(".modal__submit"),this._popupSumbitText=this._popupSubmit.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popup.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this._popUpForm.reset()})),super.setEventListeners()}toggleSubmitText(e){this._popupSubmit.textContent=e?"Saving...":this._popupSumbitText}}const i={formSelector:".modal__form",formFieldset:".form__fieldset",inputSelector:".form__input",submitButtonSelector:".form__submit",inputErrorClass:"form__input_type_error",errorTextClass:"form__input-error_active"},o=document.forms["profile-form"],n=document.querySelector(".profile").querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),l=document.querySelector(".profile__image-edit"),c=Array.from(document.forms),d={};let h=null;const u=new class{constructor(e){this._options=e,this._baseURL=e.baseUrl,this._authtoken=e.headers.authorization,this._contentTypeJSON=e.headers["Content-Type"]}getInitalCards(){return fetch(`${this._baseURL}/cards`,{method:"GET",headers:{authorization:this._authtoken}}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Loading Cards: ${e.status}`)}))}getUserInformation(){return fetch(`${this._baseURL}/users/me`,{method:"GET",headers:{authorization:this._authtoken}}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Loading Cards: ${e.status}`)}))}renderCardsValidator(){return Promise.all([this.getInitalCards(),this.getUserInformation()])}patchProfileInformation(e){let{name:t,about:r}=e;return fetch(`${this._baseURL}/users/me`,{method:"PATCH",headers:{authorization:this._authtoken,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Patching Profile Information: ${e.status}`)}))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseURL}/cards`,{method:"POST",headers:{authorization:this._authtoken,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Addding Cards: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:{authorization:this._authtoken}}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Deleting Cards: ${e.status}`)}))}likeCard(e){let{cardId:t,likeBool:r}=e;return fetch(`${this._baseURL}/cards/${t}/likes`,{method:r?"DELETE":"PUT",headers:{authorization:this._authtoken}}).then((e=>{if(e.ok)return e.json()})).catch((e=>{console.error(`Error Liking Card: ${e.status}`)}))}updateProfilePicture(e){return fetch(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:{authorization:this._authtoken,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(e))).catch((e=>{console.error(`Error Updating Profile Picture: ${e.status}`)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"3352b458-30c6-41be-9a42-00c52b81b385","Content-Type":"application/json"}}),m=new class{constructor(e){let{nameSelector:t,jobSelector:r,photoSelector:s}=e;this._nameElem=document.querySelector(t),this._jobElem=document.querySelector(r),this._imageElem=document.querySelector(s)}getUserInfo(){return{name:this._nameElem.textContent,job:this._jobElem.textContent}}setUserInfo(e){let{name:t,job:r}=e;this._nameElem.textContent=t,this._jobElem.textContent=r}setUserPhoto(e){let{avatar:t}=e;this._imageElem.src=t}}({nameSelector:".profile__name",jobSelector:".profile__avocation",photoSelector:".profile__avatar"}),_=new s({popupSelector:".profile-modal",handleSubmitFunc:e=>{_.toggleSubmitText(!0),u.patchProfileInformation({name:e.name,about:e.job}).then((t=>{_.close(),m.setUserInfo({name:e.name,job:e.job}),_.toggleSubmitText(!1)}))}}),p=new s({popupSelector:".add-modal",handleSubmitFunc:e=>{p.toggleSubmitText(!0),u.addCard({name:e.name,link:e.link}).then((e=>{const t=k({name:e.name,link:e.link,id:e._id,isLiked:e.isLiked});S.addItem(t),p.close(),p.toggleSubmitText(!1)}))}}),E=new s({popupSelector:".profile-image-modal",handleSubmitFunc:e=>{E.toggleSubmitText(!0),u.updateProfilePicture(e.avatar).then((t=>{m.setUserPhoto(e),E.close(),E.toggleSubmitText(!1)}))}}),g=new class extends r{constructor(e){let{popupSelector:t}=e;super(t),this._popupImage=this._popup.querySelector(".image-modal__img"),this._popupTitle=this._popup.querySelector(".image-modal__title")}open(e){let{cardName:t,cardLink:r}=e;this._popupImage.src="",this._popupImage.src=r,this._popupImage.alt=t,this._popupTitle.textContent=t,super.open()}}({popupSelector:".image-modal"}),f=new class extends r{constructor(e){let{popupSelector:t,handleSubmitFunc:r}=e;super(t),this._handleSubmit=r,this._submitDelete=this._popup.querySelector(".modal__submit"),this._popupSubmit=this._popup.querySelector(".modal__submit"),this._popupSumbitText=this._popupSubmit.textContent}setEventListeners(){this._submitDelete.addEventListener("click",(()=>{this._handleSubmit()})),super.setEventListeners()}toggleSubmitText(e){this._popupSubmit.textContent=e?"Saving...":this._popupSumbitText}}({popupSelector:".delete-modal",handleSubmitFunc:()=>{f.toggleSubmitText(!0),u.deleteCard(h.getID()).then((e=>{h.getCardElement().remove(),h=null,f.close(),f.toggleSubmitText(!1)}))}}),S=new class{constructor(e){this._container=document.querySelector(e)}addItem(e){this._container.prepend(e)}}(".cards__list");function b(e){h=e,f.open()}function L(e){const t=e.getCardImageElement(),r=e.getCardText();g.open({cardName:r.textContent,cardLink:t.src})}function k(t){return new e({name:t.name,link:t.link,id:t.id,isLiked:t.isLiked},".card-template",L,b,C).generateCard()}function C(e){u.likeCard({cardId:e.getID(),likeBool:e.getIsLiked()}).then((t=>{e.setIsLiked(t.isLiked)}))}c.forEach((e=>{const r=new t(i,e);d[e.id]=r,r.enableValidation()})),u.renderCardsValidator().then((e=>{e[0].sort(((e,t)=>new Date(e.createdAt)-new Date(t.createdAt))).forEach((e=>{const t=k({name:e.name,link:e.link,id:e._id,isLiked:e.isLiked});S.addItem(t)}))})),u.getUserInformation().then((e=>{m.setUserInfo({name:e.name,job:e.about}),m.setUserPhoto({avatar:e.avatar})})),n.addEventListener("click",(function(){_.open(),d[o.id].resetValidation();const{name:e,job:t}=m.getUserInfo();_.setInputValues({name:e,job:t})})),a.addEventListener("click",(()=>{p.open()})),l.addEventListener("click",(()=>{E.open()})),p.setEventListeners(),g.setEventListeners(),f.setEventListeners(),_.setEventListeners(),E.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,